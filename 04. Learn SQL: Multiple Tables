#Introduction

SELECT *
FROM orders
LIMIT 5;

SELECT *
FROM subscriptions
LIMIT 5;

SELECT *
FROM customers
LIMIT 5;

#Combining Tables with SQL

SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id;
  
SELECT *
FROM orders
JOIN subscriptions
	ON orders.subscription_id =
subscriptions.subscription_id
WHERE subscriptions.description = 'Fashion Magazine';

#Inner Joins

SELECT COUNT(*)
FROM newspaper;
SELECT COUNT(*)
FROM online;
SELECT COUNT(*)
FROM newspaper
JOIN online
	ON newspaper.id =
online.id;

#Left joins will keep all rows from the first table, regardless of whether there is a matching row in the second table

SELECT *
FROM newspaper
LEFT JOIN online
	ON newspaper.id = online.id;
SELECT *
FROM newspaper
LEFT JOIN online
	ON newspaper.id = online.id
WHERE online.id IS NULL;

#Primary key vs Foreign key
Each of these tables has a column that uniquely identifies each row of that table. These special columns are called primary keys
When the primary key for one table appears in a different table, it is called a foreign key

#Cross Join: we just want to combine all rows of one table with all rows of another table

SELECT COUNT(*)
FROM newspaper
WHERE start_month <= 3 
  AND end_month >= 3;
  
SELECT *
FROM newspaper
CROSS JOIN months;

SELECT *
FROM newspaper
CROSS JOIN months
WHERE start_month <= month 
  AND end_month >= month;

SELECT month, 
  COUNT(*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= month 
  AND end_month >= month
GROUP BY month;

#Sometimes we just want to stack one dataset on top of the other. Well, the UNION operator allows us to do that

SELECT *
FROM newspaper
UNION
SELECT *
FROM online;

#The WITH statement allows us to perform a separate query (such as aggregating customerâ€™s subscriptions)

WITH previous_query AS (
	SELECT customer_id,
		COUNT(subscription_id) AS
'subscriptions'
	FROM orders
	GROUP BY customer_id
)
SELECT customers.customer_name,
	previous_query.subscriptions
FROM previous_query
JOIN customers
	ON previous_query.customer_id =
customers.customer_id;
